package core

func CreateOpCode(op int32) interface{} {

	switch int(op) {
	case JVM_OPC_nop:
		return &OpCode{}
	case JVM_OPC_aconst_null:
		return &OpCode{}
	case JVM_OPC_iconst_m1:
	case JVM_OPC_iconst_0:
	case JVM_OPC_iconst_1:
	case JVM_OPC_iconst_2:
	case JVM_OPC_iconst_3:
	case JVM_OPC_iconst_4:
	case JVM_OPC_iconst_5:
		return &OpCode{}
	case JVM_OPC_lconst_0:
	case JVM_OPC_lconst_1:
		return &OpCode{}
	case JVM_OPC_fconst_0:
	case JVM_OPC_fconst_1:
	case JVM_OPC_fconst_2:
		return &OpCode{}
	case JVM_OPC_dconst_0:
	case JVM_OPC_dconst_1:
		return &OpCode{}
		// todo
	case JVM_OPC_bipush:
		return &OpCode{}
		// todo
	case JVM_OPC_sipush:
		return &OpCode3{}
	case JVM_OPC_ldc:
		return &OpCode2{}
	case JVM_OPC_ldc_w:
		return &OpCode3{}
	case JVM_OPC_ldc2_w:
		return &OpCode3{}
	case JVM_OPC_iload:
		return &OpCode2{}
	case JVM_OPC_lload:
		return &OpCode2{}
	case JVM_OPC_fload:
		return &OpCode2{}
	case JVM_OPC_dload:
		return &OpCode2{}
	case JVM_OPC_aload:
		return &OpCode{}
	case JVM_OPC_iload_0:
	case JVM_OPC_iload_1:
	case JVM_OPC_iload_2:
	case JVM_OPC_iload_3:
		return &OpCode{}
	case JVM_OPC_lload_0:
	case JVM_OPC_lload_1:
	case JVM_OPC_lload_2:
	case JVM_OPC_lload_3:
		return &OpCode{}
	case JVM_OPC_fload_0:
	case JVM_OPC_fload_1:
	case JVM_OPC_fload_2:
	case JVM_OPC_fload_3:
		return &OpCode{}
	case JVM_OPC_dload_0:
	case JVM_OPC_dload_1:
	case JVM_OPC_dload_2:
	case JVM_OPC_dload_3:
		return &OpCode{}
	case JVM_OPC_aload_0:
	case JVM_OPC_aload_1:
	case JVM_OPC_aload_2:
	case JVM_OPC_aload_3:
		return &OpCode{}
	case JVM_OPC_iaload:
	case JVM_OPC_laload:
	case JVM_OPC_faload:
	case JVM_OPC_daload:
	case JVM_OPC_aaload:
	case JVM_OPC_baload:
	case JVM_OPC_caload:
	case JVM_OPC_saload:
		return &OpCode{}
	case JVM_OPC_istore:
	case JVM_OPC_lstore:
	case JVM_OPC_fstore:
	case JVM_OPC_dstore:
	case JVM_OPC_astore:
		return &OpCode2{}
	case JVM_OPC_istore_0:
	case JVM_OPC_istore_1:
	case JVM_OPC_istore_2:
	case JVM_OPC_istore_3:
		return &OpCode{}
	case JVM_OPC_lstore_0:
	case JVM_OPC_lstore_1:
	case JVM_OPC_lstore_2:
	case JVM_OPC_lstore_3:
		return &OpCode{}
	case JVM_OPC_fstore_0:
	case JVM_OPC_fstore_1:
	case JVM_OPC_fstore_2:
	case JVM_OPC_fstore_3:
		return &OpCode{}
	case JVM_OPC_dstore_0:
	case JVM_OPC_dstore_1:
	case JVM_OPC_dstore_2:
	case JVM_OPC_dstore_3:
		return &OpCode{}
	case JVM_OPC_astore_0:
	case JVM_OPC_astore_1:
	case JVM_OPC_astore_2:
	case JVM_OPC_astore_3:
		return &OpCode{}
	case JVM_OPC_iastore:
	case JVM_OPC_lastore:
	case JVM_OPC_fastore:
	case JVM_OPC_dastore:
	case JVM_OPC_aastore:
	case JVM_OPC_bastore:
	case JVM_OPC_castore:
	case JVM_OPC_sastore:
		return &OpCode{}
	case JVM_OPC_pop:
	case JVM_OPC_pop2:
	case JVM_OPC_dup:
	case JVM_OPC_dup_x1:
	case JVM_OPC_dup_x2:
	case JVM_OPC_dup2:
	case JVM_OPC_dup2_x1:
	case JVM_OPC_dup2_x2:
		return &OpCode{}
	case JVM_OPC_swap:
		return &OpCode{}
	case JVM_OPC_iadd:
	case JVM_OPC_ladd:
	case JVM_OPC_fadd:
	case JVM_OPC_dadd:
		return &OpCode{}
	case JVM_OPC_isub:
	case JVM_OPC_lsub:
	case JVM_OPC_fsub:
	case JVM_OPC_dsub:
		return &OpCode{}
	case JVM_OPC_imul:
	case JVM_OPC_lmul:
	case JVM_OPC_fmul:
	case JVM_OPC_dmul:
	case JVM_OPC_idiv:
	case JVM_OPC_ldiv:
	case JVM_OPC_fdiv:
	case JVM_OPC_ddiv:
	case JVM_OPC_irem:
	case JVM_OPC_lrem:
	case JVM_OPC_frem:
	case JVM_OPC_drem:
	case JVM_OPC_ineg:
	case JVM_OPC_lneg:
	case JVM_OPC_fneg:
	case JVM_OPC_dneg:
	case JVM_OPC_ishl:
	case JVM_OPC_lshl:
	case JVM_OPC_ishr:
	case JVM_OPC_lshr:
	case JVM_OPC_iushr:
	case JVM_OPC_lushr:
	case JVM_OPC_iand:
	case JVM_OPC_land:
	case JVM_OPC_ior:
	case JVM_OPC_lor:
	case JVM_OPC_ixor:
	case JVM_OPC_lxor:
		return &OpCode{}
		// todo
	case JVM_OPC_iinc:
		return &OpCode{}
	case JVM_OPC_i2l:
		return &OpCode{}
	case JVM_OPC_i2f:
	case JVM_OPC_i2d:
	case JVM_OPC_l2i:
	case JVM_OPC_l2f:
	case JVM_OPC_l2d:
	case JVM_OPC_f2i:
	case JVM_OPC_f2l:
	case JVM_OPC_f2d:
	case JVM_OPC_d2i:
	case JVM_OPC_d2l:
	case JVM_OPC_d2f:
	case JVM_OPC_i2b:
	case JVM_OPC_i2c:
	case JVM_OPC_i2s:
	case JVM_OPC_lcmp:
		return &OpCode{}
	case JVM_OPC_fcmpl:
	case JVM_OPC_fcmpg:
	case JVM_OPC_dcmpl:
	case JVM_OPC_dcmpg:
	case JVM_OPC_ifeq:
	case JVM_OPC_ifne:
	case JVM_OPC_iflt:
	case JVM_OPC_ifge:
	case JVM_OPC_ifgt:
	case JVM_OPC_ifle:
		return &OpCode3{}
	case JVM_OPC_if_icmpeq:
	case JVM_OPC_if_icmpne:
	case JVM_OPC_if_icmplt:
	case JVM_OPC_if_icmpge:
	case JVM_OPC_if_icmpgt:
	case JVM_OPC_if_icmple:
	case JVM_OPC_if_acmpeq:
	case JVM_OPC_if_acmpne:
		return &OpCode3{}
	case JVM_OPC_goto:
		return &OpCode3{}
	case JVM_OPC_jsr:
		return &OpCode3{}
	case JVM_OPC_ret:
		return &OpCode2{}
		// todo
	case JVM_OPC_tableswitch:
		return &OpCode{}
		// todo
	case JVM_OPC_lookupswitch:
		return &OpCode{}
	case JVM_OPC_ireturn:
	case JVM_OPC_lreturn:
	case JVM_OPC_freturn:
	case JVM_OPC_dreturn:
	case JVM_OPC_areturn:
	case JVM_OPC_return:
		return &OpCode{}
	case JVM_OPC_getstatic:
	case JVM_OPC_putstatic:
	case JVM_OPC_getfield:
	case JVM_OPC_putfield:
		return &OpCode3{}
	case JVM_OPC_invokevirtual:
		return &OpCode3{}
	case JVM_OPC_invokespecial:
		return &OpCode3{}
	case JVM_OPC_invokestatic:
		return &OpCode3{}
		// todo
	case JVM_OPC_invokeinterface:
		return &OpCode{}
		// todo
	case JVM_OPC_invokedynamic:
		return &OpCode{}
	case JVM_OPC_new:
		return &OpCode3{}
		// todo
	case JVM_OPC_newarray:
		return &OpCode{}
	case JVM_OPC_anewarray:
		return &OpCode3{}
	case JVM_OPC_arraylength:
		return &OpCode{}
	case JVM_OPC_athrow:
		return &OpCode{}
	case JVM_OPC_checkcast:
		return &OpCode3{}
	case JVM_OPC_instanceof:
		return &OpCode3{}
	case JVM_OPC_monitorenter:
	case JVM_OPC_monitorexit:
		return &OpCode{}
		// todo
	case JVM_OPC_wide:
		return &OpCode{}
		// todo
	case JVM_OPC_multianewarray:
		return &OpCode{}
	case JVM_OPC_ifnull:
	case JVM_OPC_ifnonnull:
		return &OpCode3{}
	case JVM_OPC_goto_w:
	case JVM_OPC_jsr_w:
		return &OpCode5{}
	default:
		return &OpCode{}
	}

	return &OpCode{}
}
