Classfile /Users/zl/Documents/DEV/github/class-parse/testfiles/Main.class
  Last modified 2021-1-17; size 3377 bytes
  MD5 checksum 5bb681d1ec46ad1aa3db24525e5867df
  Compiled from "Main.java"
public class Main extends AbstractMain implements InterfaceMain
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
    #1 = Methodref          #61.#122      // AbstractMain.<init>:()V
    #2 = Fieldref           #6.#123       // Main.name:Ljava/lang/String;
    #3 = Fieldref           #124.#125     // java/lang/System.out:Ljava/io/PrintStream;
    #4 = String             #126          // Hello word!
    #5 = Methodref          #127.#128     // java/io/PrintStream.println:(Ljava/lang/String;)V
    #6 = Class              #129          // Main
    #7 = Methodref          #6.#122       // Main.<init>:()V
    #8 = String             #130          // 777
    #9 = InvokeDynamic      #0:#135       // #0:run:(LMain;Ljava/lang/String;)Ljava/lang/Runnable;
   #10 = InterfaceMethodref #136.#137     // java/lang/Runnable.run:()V
   #11 = String             #138          // 
   #12 = String             #139          // a
   #13 = String             #140          // c
   #14 = String             #141          // D
   #15 = String             #142          // Z
   #16 = String             #143          // try
   #17 = String             #144          // finally
   #18 = Class              #145          // java/lang/Exception
   #19 = String             #146          // catch
   #20 = String             #147          // ha ha ha ha
   #21 = Class              #148          // java/lang/StringBuilder
   #22 = Methodref          #21.#122      // java/lang/StringBuilder.<init>:()V
   #23 = String             #149          // Hi,2021
   #24 = Methodref          #21.#150      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #25 = Methodref          #21.#151      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #26 = Class              #152          // java/lang/String
   #27 = Methodref          #6.#153       // Main.hi:(Ljava/lang/String;)Ljava/lang/String;
   #28 = String             #154          // run
   #29 = Class              #155          // java/lang/Integer
   #30 = Integer            2147483647
   #31 = Methodref          #29.#156      // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #32 = Fieldref           #6.#157       // Main.INT_MAX:Ljava/lang/Integer;
   #33 = Integer            -2147483648
   #34 = Fieldref           #6.#158       // Main.INT_MIN:Ljava/lang/Integer;
   #35 = Class              #159          // java/lang/Long
   #36 = Long               9223372036854775807l
   #38 = Methodref          #35.#160      // java/lang/Long.valueOf:(J)Ljava/lang/Long;
   #39 = Fieldref           #6.#161       // Main.LONG_MAX:Ljava/lang/Long;
   #40 = Long               -9223372036854775808l
   #42 = Fieldref           #6.#162       // Main.LONG_MIN:Ljava/lang/Long;
   #43 = Class              #163          // java/lang/Double
   #44 = Double             1.7976931348623157e+308d
   #46 = Methodref          #43.#164      // java/lang/Double.valueOf:(D)Ljava/lang/Double;
   #47 = Fieldref           #6.#165       // Main.DOUBLE_MAX:Ljava/lang/Double;
   #48 = Double             5e-324d
   #50 = Fieldref           #6.#166       // Main.DOUBLE_MIN:Ljava/lang/Double;
   #51 = Class              #167          // java/lang/Float
   #52 = Float              3.4028235e+38f
   #53 = Methodref          #51.#168      // java/lang/Float.valueOf:(F)Ljava/lang/Float;
   #54 = Fieldref           #6.#169       // Main.FLOAT_MAX:Ljava/lang/Float;
   #55 = Float              1e-45f
   #56 = Fieldref           #6.#170       // Main.FLOAT_MIN:Ljava/lang/Float;
   #57 = Class              #171          // java/lang/Short
   #58 = Methodref          #57.#172      // java/lang/Short.valueOf:(S)Ljava/lang/Short;
   #59 = Fieldref           #6.#173       // Main.SHORT_MAX:Ljava/lang/Short;
   #60 = Fieldref           #6.#174       // Main.SHORT_MIN:Ljava/lang/Short;
   #61 = Class              #175          // AbstractMain
   #62 = Class              #176          // InterfaceMain
   #63 = Utf8               INT_MAX
   #64 = Utf8               Ljava/lang/Integer;
   #65 = Utf8               RuntimeVisibleAnnotations
   #66 = Utf8               LFFF;
   #67 = Utf8               INT_MIN
   #68 = Utf8               LONG_MAX
   #69 = Utf8               Ljava/lang/Long;
   #70 = Utf8               LONG_MIN
   #71 = Utf8               DOUBLE_MAX
   #72 = Utf8               Ljava/lang/Double;
   #73 = Utf8               DOUBLE_MIN
   #74 = Utf8               FLOAT_MAX
   #75 = Utf8               Ljava/lang/Float;
   #76 = Utf8               FLOAT_MIN
   #77 = Utf8               SHORT_MAX
   #78 = Utf8               Ljava/lang/Short;
   #79 = Utf8               SHORT_MIN
   #80 = Utf8               name
   #81 = Utf8               Ljava/lang/String;
   #82 = Utf8               <init>
   #83 = Utf8               ()V
   #84 = Utf8               Code
   #85 = Utf8               LineNumberTable
   #86 = Utf8               (Ljava/lang/String;)V
   #87 = Utf8               main
   #88 = Utf8               ([Ljava/lang/String;)V
   #89 = Utf8               StackMapTable
   #90 = Class              #177          // [Ljava/lang/String;
   #91 = Class              #129          // Main
   #92 = Class              #152          // java/lang/String
   #93 = Class              #178          // java/lang/Runnable
   #94 = Class              #145          // java/lang/Exception
   #95 = Class              #179          // java/lang/Throwable
   #96 = Utf8               Exceptions
   #97 = Class              #180          // java/io/IOException
   #98 = Utf8               say
   #99 = Utf8               value
  #100 = Utf8               3FFF
  #101 = Utf8               LName;
  #102 = Utf8               My Name
  #103 = Utf8               index
  #104 = Integer            666
  #105 = Utf8               LHandler;
  #106 = Utf8               LMainEnum;
  #107 = Utf8               ONE
  #108 = Utf8               clazz
  #109 = Utf8               LInterfaceMain;
  #110 = Utf8               1
  #111 = Utf8               2
  #112 = Utf8               hi
  #113 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #114 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #115 = Utf8               lambda$main$0
  #116 = Utf8               (LMain;Ljava/lang/String;)V
  #117 = Utf8               <clinit>
  #118 = Utf8               Signature
  #119 = Utf8               LAbstractMain<Ljava/lang/String;>;LInterfaceMain;
  #120 = Utf8               SourceFile
  #121 = Utf8               Main.java
  #122 = NameAndType        #82:#83       // <init>:()V
  #123 = NameAndType        #80:#81       // name:Ljava/lang/String;
  #124 = Class              #181          // java/lang/System
  #125 = NameAndType        #182:#183     // out:Ljava/io/PrintStream;
  #126 = Utf8               Hello word!
  #127 = Class              #184          // java/io/PrintStream
  #128 = NameAndType        #185:#86      // println:(Ljava/lang/String;)V
  #129 = Utf8               Main
  #130 = Utf8               777
  #131 = Utf8               BootstrapMethods
  #132 = MethodHandle       6:#186        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #133 = MethodType         #83           //  ()V
  #134 = MethodHandle       6:#187        // REF_invokeStatic Main.lambda$main$0:(LMain;Ljava/lang/String;)V
  #135 = NameAndType        #154:#188     // run:(LMain;Ljava/lang/String;)Ljava/lang/Runnable;
  #136 = Class              #178          // java/lang/Runnable
  #137 = NameAndType        #154:#83      // run:()V
  #138 = Utf8               
  #139 = Utf8               a
  #140 = Utf8               c
  #141 = Utf8               D
  #142 = Utf8               Z
  #143 = Utf8               try
  #144 = Utf8               finally
  #145 = Utf8               java/lang/Exception
  #146 = Utf8               catch
  #147 = Utf8               ha ha ha ha
  #148 = Utf8               java/lang/StringBuilder
  #149 = Utf8               Hi,2021
  #150 = NameAndType        #189:#190     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #151 = NameAndType        #191:#192     // toString:()Ljava/lang/String;
  #152 = Utf8               java/lang/String
  #153 = NameAndType        #112:#113     // hi:(Ljava/lang/String;)Ljava/lang/String;
  #154 = Utf8               run
  #155 = Utf8               java/lang/Integer
  #156 = NameAndType        #193:#194     // valueOf:(I)Ljava/lang/Integer;
  #157 = NameAndType        #63:#64       // INT_MAX:Ljava/lang/Integer;
  #158 = NameAndType        #67:#64       // INT_MIN:Ljava/lang/Integer;
  #159 = Utf8               java/lang/Long
  #160 = NameAndType        #193:#195     // valueOf:(J)Ljava/lang/Long;
  #161 = NameAndType        #68:#69       // LONG_MAX:Ljava/lang/Long;
  #162 = NameAndType        #70:#69       // LONG_MIN:Ljava/lang/Long;
  #163 = Utf8               java/lang/Double
  #164 = NameAndType        #193:#196     // valueOf:(D)Ljava/lang/Double;
  #165 = NameAndType        #71:#72       // DOUBLE_MAX:Ljava/lang/Double;
  #166 = NameAndType        #73:#72       // DOUBLE_MIN:Ljava/lang/Double;
  #167 = Utf8               java/lang/Float
  #168 = NameAndType        #193:#197     // valueOf:(F)Ljava/lang/Float;
  #169 = NameAndType        #74:#75       // FLOAT_MAX:Ljava/lang/Float;
  #170 = NameAndType        #76:#75       // FLOAT_MIN:Ljava/lang/Float;
  #171 = Utf8               java/lang/Short
  #172 = NameAndType        #193:#198     // valueOf:(S)Ljava/lang/Short;
  #173 = NameAndType        #77:#78       // SHORT_MAX:Ljava/lang/Short;
  #174 = NameAndType        #79:#78       // SHORT_MIN:Ljava/lang/Short;
  #175 = Utf8               AbstractMain
  #176 = Utf8               InterfaceMain
  #177 = Utf8               [Ljava/lang/String;
  #178 = Utf8               java/lang/Runnable
  #179 = Utf8               java/lang/Throwable
  #180 = Utf8               java/io/IOException
  #181 = Utf8               java/lang/System
  #182 = Utf8               out
  #183 = Utf8               Ljava/io/PrintStream;
  #184 = Utf8               java/io/PrintStream
  #185 = Utf8               println
  #186 = Methodref          #199.#200     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #187 = Methodref          #6.#201       // Main.lambda$main$0:(LMain;Ljava/lang/String;)V
  #188 = Utf8               (LMain;Ljava/lang/String;)Ljava/lang/Runnable;
  #189 = Utf8               append
  #190 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #191 = Utf8               toString
  #192 = Utf8               ()Ljava/lang/String;
  #193 = Utf8               valueOf
  #194 = Utf8               (I)Ljava/lang/Integer;
  #195 = Utf8               (J)Ljava/lang/Long;
  #196 = Utf8               (D)Ljava/lang/Double;
  #197 = Utf8               (F)Ljava/lang/Float;
  #198 = Utf8               (S)Ljava/lang/Short;
  #199 = Class              #202          // java/lang/invoke/LambdaMetafactory
  #200 = NameAndType        #203:#207     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #201 = NameAndType        #115:#116     // lambda$main$0:(LMain;Ljava/lang/String;)V
  #202 = Utf8               java/lang/invoke/LambdaMetafactory
  #203 = Utf8               metafactory
  #204 = Class              #209          // java/lang/invoke/MethodHandles$Lookup
  #205 = Utf8               Lookup
  #206 = Utf8               InnerClasses
  #207 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #208 = Class              #210          // java/lang/invoke/MethodHandles
  #209 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #210 = Utf8               java/lang/invoke/MethodHandles
{
  public static final Ljava/lang/Integer; INT_MAX;
    descriptor: Ljava/lang/Integer;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    RuntimeVisibleAnnotations:
      0: #66()

  public static final Ljava/lang/Integer; INT_MIN;
    descriptor: Ljava/lang/Integer;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final Ljava/lang/Long; LONG_MAX;
    descriptor: Ljava/lang/Long;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final Ljava/lang/Long; LONG_MIN;
    descriptor: Ljava/lang/Long;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final Ljava/lang/Double; DOUBLE_MAX;
    descriptor: Ljava/lang/Double;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final Ljava/lang/Double; DOUBLE_MIN;
    descriptor: Ljava/lang/Double;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final Ljava/lang/Float; FLOAT_MAX;
    descriptor: Ljava/lang/Float;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final Ljava/lang/Float; FLOAT_MIN;
    descriptor: Ljava/lang/Float;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final Ljava/lang/Short; SHORT_MAX;
    descriptor: Ljava/lang/Short;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final Ljava/lang/Short; SHORT_MIN;
    descriptor: Ljava/lang/Short;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private Ljava/lang/String; name;
    descriptor: Ljava/lang/String;
    flags: ACC_PRIVATE

  public <init>();
      descriptor: ()V
      flags: ACC_PUBLIC
      Code:
        stack=1, locals=1, args_size=1
            0: aload_0
            1: invokespecial
            4: return
        LineNumberTable:
            line 29: 0
            line 30: 4

  public <init>();
      descriptor: (Ljava/lang/String;)V
      flags: ACC_PUBLIC
      Code:
        stack=2, locals=2, args_size=1
            0: aload_0
            1: invokespecial
            4: aload_0
            5: aload_1
            6: putfield
            9: return
        LineNumberTable:
            line 32: 0
            line 33: 4
            line 34: 9

  public static main();
      descriptor: ([Ljava/lang/String;)V
      flags: ACC_PUBLIC, ACC_STATIC
      Code:
        stack=2, locals=8, args_size=1
            0: getstatic
            3: ldc
            5: invokevirtual
            8: new
            11: dup
            12: invokespecial
            15: astore_1
            16: ldc
            18: astore_2
            19: aload_1
            20: aload_2
            21: invokedynamic
            26: astore_3
            27: aload_3
            28: invokeinterface
            33: iconst_1
            34: istore
            36: ldc
            38: astore
            40: iload
            42: tableswitch { // 1-3
               1:68
               2:72
               3:76
         default:80
} 
            68: ldc
            70: astore
            72: ldc
            74: astore
            76: ldc
            78: astore
            80: ldc
            82: astore
            84: getstatic
            87: ldc
            89: invokevirtual
            92: getstatic
            95: ldc
            97: invokevirtual
            100: goto
            103: astore
            105: getstatic
            108: ldc
            110: invokevirtual
            113: getstatic
            116: ldc
            118: invokevirtual
            121: goto
            124: astore
            126: getstatic
            129: ldc
            131: invokevirtual
            134: aload
            135: iconst_4
            136: athrow
            137: return
        LineNumberTable:
            line 38: 0
            line 39: 8
            line 41: 16
            line 42: 19
            line 47: 27
            line 49: 33
            line 50: 36
            line 51: 40
            line 53: 68
            line 56: 72
            line 59: 76
            line 62: 80
            line 67: 84
            line 71: 92
            line 72: 100
            line 68: 103
            line 69: 105
            line 71: 113
            line 72: 121
            line 71: 124
            line 72: 134
            line 73: 137        StackMapTable
        Exceptions

  public say();
      descriptor: ()V
      flags: ACC_PUBLIC
      Code:
        stack=2, locals=1, args_size=1
            0: getstatic
            3: ldc
            5: invokevirtual
            8: return
        LineNumberTable:
            line 80: 0
            line 81: 8
        RuntimeVisibleAnnotations:
      0: #66(#99=s#100)
      1: #101(#80=s#102,#103=I#104)
      2: #105(#80=e#106.#107,#108=c#109,#99=[s#110,s#111])

  public hi();
      descriptor: (Ljava/lang/String;)Ljava/lang/String;
      flags: ACC_PUBLIC
      Code:
        stack=2, locals=2, args_size=1
            0: new
            3: dup
            4: invokespecial
            7: ldc
            9: invokevirtual
            12: aload_1
            13: invokevirtual
            16: invokevirtual
            19: areturn
        LineNumberTable:
            line 85: 0

  public bridge synthetic hi();
      descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
      flags: ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
      Code:
        stack=2, locals=2, args_size=1
            0: aload_0
            1: aload_1
            2: checkcast
            5: invokevirtual
            8: areturn
        LineNumberTable:
            line 8: 0

  private static synthetic lambda$main$0();
      descriptor: (LMain;Ljava/lang/String;)V
      flags: ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
      Code:
        stack=2, locals=2, args_size=1
            0: getstatic
            3: ldc
            5: invokevirtual
            8: aload_0
            9: aload_1
            10: invokevirtual
            13: pop
            14: return
        LineNumberTable:
            line 43: 0
            line 44: 8
            line 45: 14

  static <clinit>();
      descriptor: ()V
      flags: ACC_STATIC
      Code:
        stack=2, locals=0, args_size=1
            0: ldc
            2: invokestatic
            5: putstatic
            8: ldc
            10: invokestatic
            13: putstatic
            16: ldc2_w
            19: invokestatic
            22: putstatic
            25: ldc2_w
            28: invokestatic
            31: putstatic
            34: ldc2_w
            37: invokestatic
            40: putstatic
            43: ldc2_w
            46: invokestatic
            49: putstatic
            52: ldc
            54: invokestatic
            57: putstatic
            60: ldc
            62: invokestatic
            65: putstatic
            68: sipush
            71: invokestatic
            74: putstatic
            77: sipush
            80: invokestatic
            83: putstatic
            86: return
        LineNumberTable:
            line 12: 0
            line 13: 8
            line 15: 16
            line 16: 25
            line 18: 34
            line 19: 43
            line 21: 52
            line 22: 60
            line 24: 68
            line 25: 77

}